name: 'Tests'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

permissions:
  contents: read

jobs:
  pytest:
    name: '${{ matrix.os }} / ${{ matrix.python }} / ${{ matrix.distrib }} / ${{ matrix.sphinx_version }}'
    timeout-minutes: 30
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    env:
      PYTHON_VERSION: '${{ matrix.python }}'
      SPHINX_VERSION: '${{ matrix.sphinx_version }}'
      DISTRIB: '${{ matrix.distrib }}'
    strategy:
      matrix:
        sphinx_version: ['default']
        distrib: ['mamba']
        python: ['3.11']
        os: ['ubuntu-latest']
        include:
          - python: '3.12'
            sphinx_version: dev
            locale: C
          - sphinx_version: '6'
          - python: '3.8'
            sphinx_version: old
          - python: '3.8'
            distrib: minimal
          - distrib: pip
          - os: macos-latest
            distrib: pip
          - os: windows-latest
            distrib: pip
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Xvfb/OpenGL
      - uses: pyvista/setup-headless-display-action@main
        with:
          qt: true
          pyvista: false
      # Python (if pip)
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
        if: matrix.distrib != 'mamba'
      # Python (if conda)
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: test
          init-shell: bash
          create-args: 'python=${{ env.PYTHON_VERSION }} pip numpy setuptools matplotlib pillow pytest pytest-cov coverage seaborn statsmodels plotly joblib wheel libiconv pygraphviz memory_profiler ipython pypandoc'
        if: matrix.distrib == 'mamba'
      - name: Set env vars
        shell: bash -e {0}
        run: |
          echo "LC_ALL=C" >> $GITHUB_ENV
          echo "LANG=C" >> $GITHUB_ENV
          echo "LC_CTYPE=C" >> $GITHUB_ENV
        if: matrix.locale == 'C'
      - run: ./continuous_integration/install.sh
      - run: ./continuous_integration/test_script.sh
      - uses: codecov/codecov-action@v3
