trigger:
  batch: False
  branches:
    include:
      - '*'
pr:
  branches:
    include:
      - '*'

stages:

- stage: Check
  jobs:
    - job: Skip
      pool:
        vmImage: 'ubuntu-18.04'
      variables:
        RET: 'true'
      steps:
      - bash: |
          git_log=`git log --max-count=1 --skip=1 --pretty=format:"%s"`
          echo "##vso[task.setvariable variable=log]$git_log"
      - bash: echo "##vso[task.setvariable variable=RET]false"
        condition: or(contains(variables.log, '[skip azp]'), contains(variables.log, '[azp skip]'), contains(variables.log, '[skip ci]'), contains(variables.log, '[ci skip]'))
      - bash: echo "##vso[task.setvariable variable=start_main;isOutput=true]$RET"
        name: result

- stage: Main
  condition: and(succeeded(), eq(dependencies.Check.outputs['Skip.result.start_main'], 'true'))
  dependsOn: Check
  variables:
    AZURE_CI: 'true'

  jobs:
  - job:
    displayName: Windows
    pool:
      vmImage: 'windows-latest'
    strategy:
      matrix:
        Python39:
          PYTHON_VERSION: '3.9'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(PYTHON_VERSION)
        architecture: 'x64'
        addToPath: true
    - bash: |
        set -e
        git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
        powershell gl-ci-helpers/appveyor/install_opengl.ps1
      displayName: Install OpenGL
    - bash: |
        set -e
        python --version
        python -m pip install --user --upgrade pip setuptools wheel
        pip install --user --upgrade --progress-bar off --upgrade ipython numpy seaborn statsmodels matplotlib sphinx pillow pytest pytest-cov sphinx_rtd_theme joblib "plotly>=4.0" vtk
        pip install --user --upgrade --progress-bar off pyvista mayavi pyqt5
      displayName: Setup pip environment
    - script: pip list
      displayName: pip list
    - script: python -c "import pyvista; print(pyvista.Report()); from mayavi import mlab; mlab.test_plot3d()"
      displayName: Test 3D
    - script: python setup.py develop --user
      displayName: Install sphinx-gallery
    - script: pytest --tb=short sphinx_gallery
      displayName: pytest
    - bash: |
        set -e
        sed -i '/show_memory/d' doc/conf.py
        sed -i '/compress_images/d' doc/conf.py
      displayName: Remove keys incompatible with this Windows build
    - bash: make -C doc html
      displayName: make html
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'junit-*.xml'
        testRunTitle: 'Publish test results for $(Agent.JobName) $(TEST_MODE) $(PYTHON_VERSION)'
        failTaskOnFailedTests: true
      condition: succeededOrFailed()

  - job:
    displayName: Linux
    pool:
      vmImage: 'ubuntu-18.04'
    variables:
      DISPLAY: ':99'
    strategy:
      matrix:
        ubuntu_python37:
          DISTRIB: 'ubuntu'
          PYTHON_VERSION: '3.7'
          SPHINXOPTS: ''
        conda_python37_sphinxOld:
          DISTRIB: 'conda'
          PYTHON_VERSION: '3.7'
          SPHINX_VERSION: '3'
          LOCALE: 'C'
        conda_python38_sphinxDev:
          DISTRIB: 'conda'
          PYTHON_VERSION: '3.8'
          SPHINX_VERSION: 'dev'
        python37_minimal:
          DISTRIB: 'minimal'
          PYTHON_VERSION: '3.7'
        pythonNightly:
          DISTRIB: 'nightly'
          PYTHON_VERSION: '3.10'

    steps:
    - task: UsePythonVersion@0
      displayName: Specify Python version for minimal and ubuntu
      inputs:
        versionSpec: $(PYTHON_VERSION)
      condition: or(eq(variables['DISTRIB'], 'minimal'), eq(variables['DISTRIB'], 'ubuntu'))
    # Make sure that things work even if the locale is set to C (which
    # effectively means ASCII). Some of the input rst files have unicode
    # characters and we need to deal with this gracefully.
    - bash: |
        export LC_CTYPE=C
        export LC_ALL=C
        export LANG=C
      displayName: Set locale
      condition: eq(variables['LOCALE'], 'C')
    - bash: |
        sudo add-apt-repository ppa:deadsnakes/ppa
      condition: eq(variables['DISTRIB'], 'nightly')
      displayName: Add deadsnakes PPA
    - bash: |
        sudo apt-get update
        sudo apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6 optipng xvfb
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset;
      displayName: Install Ubuntu dependencies and start Xvfb
    - task: Bash@3
      inputs:
        filePath: continuous_integration/azure/install.sh
      displayName: Run install.sh
    - task: Bash@3
      inputs:
        filePath: continuous_integration/azure/test_script.sh
      displayName: Run test_script.sh
